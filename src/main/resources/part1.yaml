openapi: 3.0.3
info:
  title: part1
  description: part1
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Patients
    description: Endpoints for managing patients
  - name: Doctors
    description: Endpoints for managing doctors
  - name: Appointments
    description: Endpoints for managing appointments
  - name: Medical Records
    description: Endpoints for managing medical records
components:
  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        address:
          type: string
    Doctor:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        specialisation:
          type: string
        email:
          type: string
        phone_number:
          type: string
    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        appointment_date:
          type: string
          format: date-time
        status:
          type: string
        notes:
          type: string
    MedicalRecord:
      type: object
      properties:
        id:
          type: integer
          format: int64
        record_date:
          type: string
          format: date-time
        diagnosis:
          type: string
        treatment:
          type: string
        notes:
          type: string
paths:
  /patients:
    get:
      tags:
        - Patients
      summary: List all patients
      responses:
        '200':
          description: listOfPatients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        '404':
          description: noPatientsFound
    post:
      tags:
        - Patients
      summary: Create a new patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          description: patientCreated
        '400':
          description: invalidPatientData
  /patients/{id}:
    get:
      tags:
        - Patients
      summary: Get patient by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: patientFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '404':
          description: patientNotFound
    put:
      tags:
        - Patients
      summary: Update patient by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: patientUpdated
        '404':
          description: patientNotFound
    delete:
      tags:
        - Patients
      summary: Delete patient by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: patientDeleted
        '404':
          description: patientNotFound
  /patients/{id}/appointments:
    get:
      tags:
        - Patients
      summary: Get appointments for a patient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: listOfAppointments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '404':
          description: patientNotFound
  /patients/{id}/medical-records:
    get:
      tags:
        - Patients
      summary: Get medical records for a patient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: listOfMedicalRecords
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalRecord'
        '404':
          description: patientNotFound
  /doctors:
    get:
      tags:
        - Doctors
      summary: List all doctors
      responses:
        '200':
          description: listOfDoctors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Doctor'
        '404':
          description: noDoctorsFound
  /doctors/{id}:
    get:
      tags:
        - Doctors
      summary: Get doctor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: doctorFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '404':
          description: doctorNotFound
    put:
      tags:
        - Doctors
      summary: Update doctor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          description: doctorUpdated
        '404':
          description: doctorNotFound
    delete:
      tags:
        - Doctors
      summary: Delete doctor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: doctorDeleted
        '404':
          description: doctorNotFound
    post:
      tags:
        - Doctors
      summary: Create a new doctor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '201':
          description: doctorCreated
        '400':
          description: invalidDoctorData
  /doctors/{id}/appointments:
    get:
      tags:
        - Doctors
      summary: Get appointments for a doctor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: listOfAppointments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '404':
          description: doctorNotFound
  /appointments:
    get:
      tags:
        - Appointments
      summary: List all appointments
      responses:
        '200':
          description: listOfAppointments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '404':
          description: noAppointmentsFound
    post:
      tags:
        - Appointments
      summary: Create a new appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '201':
          description: appointmentCreated
        '400':
          description: invalidAppointmentData
  /appointments/{id}:
    get:
      tags:
        - Appointments
      summary: Get appointment by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: appointmentFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: appointmentNotFound
    put:
      tags:
        - Appointments
      summary: Update appointment by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: appointmentUpdated
        '404':
          description: appointmentNotFound
    delete:
      tags:
        - Appointments
      summary: Delete appointment by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: appointmentDeleted
        '404':
          description: appointmentNotFound
  /appointments/{id}/medical-record:
    get:
      tags:
        - Appointments
      summary: Get medical records for an appointment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: listOfMedicalRecords
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalRecord'
        '404':
          description: appointmentNotFound
  /medical-records:
    post:
      tags:
        - Medical Records
      summary: Create a new medical record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
      responses:
        '201':
          description: medicalRecordCreated
        '400':
          description: invalidMedicalRecordData
